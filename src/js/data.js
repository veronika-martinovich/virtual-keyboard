export const buttons = [
  { size: 'xs', type: 'input', firstValue: 'ё', secondValue: '`', ruShift: 'Ё', enShift: '~' },
  { size: 'xs', type: 'input', firstValue: '1', secondValue: '1', ruShift: '!', enShift: '!' },
  { size: 'xs', type: 'input', firstValue: '2', secondValue: '2', ruShift: '"', enShift: '"' },
  { size: 'xs', type: 'input', firstValue: '3', secondValue: '3', ruShift: '№', enShift: '#' },
  { size: 'xs', type: 'input', firstValue: '4', secondValue: '4', ruShift: ';', enShift: '$' },
  { size: 'xs', type: 'input', firstValue: '5', secondValue: '5', ruShift: '%', enShift: '%' },
  { size: 'xs', type: 'input', firstValue: '6', secondValue: '6', ruShift: ':', enShift: '^' },
  { size: 'xs', type: 'input', firstValue: '7', secondValue: '7', ruShift: '?', enShift: '&' },
  { size: 'xs', type: 'input', firstValue: '8', secondValue: '8', ruShift: '*', enShift: '*' },
  { size: 'xs', type: 'input', firstValue: '9', secondValue: '9', ruShift: '(', enShift: '(' },
  { size: 'xs', type: 'input', firstValue: '0', secondValue: '0', ruShift: ')', enShift: ')' },
  { size: 'xs', type: 'input', firstValue: '-', secondValue: '-', ruShift: '_', enShift: '_' },
  { size: 'xs', type: 'input', firstValue: '=', secondValue: '=', ruShift: '+', enShift: '+' },
  { size: 'l', type: 'system', firstValue: 'Backspace', keyCode: 'Backspace' },
  { size: 's', type: 'system', firstValue: 'Tab', keyCode: 'Tab' },
  { size: 'xs', type: 'input', firstValue: 'й', secondValue: 'q', ruShift: 'Й', enShift: 'Q' },
  { size: 'xs', type: 'input', firstValue: 'ц', secondValue: 'w', ruShift: 'Ц', enShift: 'W' },
  { size: 'xs', type: 'input', firstValue: 'у', secondValue: 'e', ruShift: 'У', enShift: 'E' },
  { size: 'xs', type: 'input', firstValue: 'к', secondValue: 'r', ruShift: 'К', enShift: 'R' },
  { size: 'xs', type: 'input', firstValue: 'е', secondValue: 't', ruShift: 'Е', enShift: 'T' },
  { size: 'xs', type: 'input', firstValue: 'н', secondValue: 'y', ruShift: 'Н', enShift: 'Y' },
  { size: 'xs', type: 'input', firstValue: 'г', secondValue: 'u', ruShift: 'Г', enShift: 'U' },
  { size: 'xs', type: 'input', firstValue: 'ш', secondValue: 'i', ruShift: 'Ш', enShift: 'I' },
  { size: 'xs', type: 'input', firstValue: 'щ', secondValue: 'o', ruShift: 'Щ', enShift: 'O' },
  { size: 'xs', type: 'input', firstValue: 'з', secondValue: 'p', ruShift: 'З', enShift: 'P' },
  { size: 'xs', type: 'input', firstValue: 'х', secondValue: '[', ruShift: 'Х', enShift: '{' },
  { size: 'xs', type: 'input', firstValue: 'ъ', secondValue: ']', ruShift: 'Ъ', enShift: '}' },
  { size: 'xs', type: 'input', firstValue: '\\', secondValue: '\\', ruShift: '/', enShift: '|' },
  { size: 's', type: 'system', firstValue: 'Del', keyCode: 'Delete' },
  { size: 'l', type: 'system', firstValue: 'CapsLock', keyCode: 'CapsLock' },
  { size: 'xs', type: 'input', firstValue: 'ф', secondValue: 'a', ruShift: 'Ф', enShift: 'A' },
  { size: 'xs', type: 'input', firstValue: 'ы', secondValue: 's', ruShift: 'Ы', enShift: 'S' },
  { size: 'xs', type: 'input', firstValue: 'в', secondValue: 'd', ruShift: 'В', enShift: 'D' },
  { size: 'xs', type: 'input', firstValue: 'а', secondValue: 'f', ruShift: 'А', enShift: 'F' },
  { size: 'xs', type: 'input', firstValue: 'п', secondValue: 'g', ruShift: 'П', enShift: 'G' },
  { size: 'xs', type: 'input', firstValue: 'р', secondValue: 'h', ruShift: 'Р', enShift: 'H' },
  { size: 'xs', type: 'input', firstValue: 'о', secondValue: 'j', ruShift: 'О', enShift: 'J' },
  { size: 'xs', type: 'input', firstValue: 'л', secondValue: 'k', ruShift: 'Л', enShift: 'K' },
  { size: 'xs', type: 'input', firstValue: 'д', secondValue: 'l', ruShift: 'Д', enShift: 'L' },
  { size: 'xs', type: 'input', firstValue: 'ж', secondValue: ';', ruShift: 'Ж', enShift: ':' },
  { size: 'xs', type: 'input', firstValue: 'э', secondValue: '\'', ruShift: '', enShift: '"' },
  { size: 'm', type: 'system', firstValue: 'Enter', keyCode: 'Enter' },
  { size: 'l', type: 'system', firstValue: 'Shift', keyCode: 'ShiftLeft' },
  { size: 'xs', type: 'input', firstValue: 'я', secondValue: 'z', ruShift: 'Я', enShift: 'Z' },
  { size: 'xs', type: 'input', firstValue: 'ч', secondValue: 'x', ruShift: 'Ч', enShift: 'X' },
  { size: 'xs', type: 'input', firstValue: 'с', secondValue: 'c', ruShift: 'С', enShift: 'C' },
  { size: 'xs', type: 'input', firstValue: 'м', secondValue: 'v', ruShift: 'М', enShift: 'V' },
  { size: 'xs', type: 'input', firstValue: 'и', secondValue: 'b', ruShift: 'И', enShift: 'B' },
  { size: 'xs', type: 'input', firstValue: 'т', secondValue: 'n', ruShift: 'Т', enShift: 'N' },
  { size: 'xs', type: 'input', firstValue: 'ь', secondValue: 'm', ruShift: 'Ь', enShift: 'M' },
  { size: 'xs', type: 'input', firstValue: 'б', secondValue: ',', ruShift: 'Б', enShift: '<' },
  { size: 'xs', type: 'input', firstValue: 'ю', secondValue: '.', ruShift: 'Ю', enShift: '>' },
  { size: 'xs', type: 'input', firstValue: '.', secondValue: '/', ruShift: ',', enShift: '?' },
  { size: 'xs', type: 'system', firstValue: '&#9650', keyCode: 'ArrowUp' },
  { size: 'm', type: 'system', firstValue: 'Shift', keyCode: 'ShiftRight' },
  { size: 'xs', type: 'system', firstValue: 'Ctrl', keyCode: 'ControlLeft' },
  { size: 'xs', type: 'system', firstValue: 'Win', keyCode: 'MetaLeft' },
  { size: 'xs', type: 'system', firstValue: 'Alt', keyCode: 'AltLeft' },
  { size: 'xl', type: 'input', firstValue: '', keyCode: 'Space' },
  { size: 'xs', type: 'system', firstValue: 'Alt', keyCode: 'AltRight' },
  { size: 'xs', type: 'system', firstValue: '&#9668', keyCode: 'ArrowLeft' },
  { size: 'xs', type: 'system', firstValue: '&#9660', keyCode: 'ArrowDown' },
  { size: 'xs', type: 'system', firstValue: '&#9658', keyCode: 'ArrowRight' },
  { size: 'xs', type: 'system', firstValue: 'Ctrl', keyCode: 'ControlRight' }    
]